<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Canoe</title>
  
  <subtitle>「ろくでなし」</subtitle>
  <link href="/rss.xml" rel="self"/>
  
  <link href="http://www.orekiyuta.cn/"/>
  <updated>2021-12-20T14:45:37.095Z</updated>
  <id>http://www.orekiyuta.cn/</id>
  
  <author>
    <name>Orekiyuta</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Fiddler About Phone Proxy</title>
    <link href="http://www.orekiyuta.cn/archives/fiddlerAboutPhoneProxy/"/>
    <id>http://www.orekiyuta.cn/archives/fiddlerAboutPhoneProxy/</id>
    <published>2021-12-20T14:13:40.000Z</published>
    <updated>2021-12-20T14:45:37.095Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Scene"><a href="#Scene" class="headerlink" title="Scene"></a>Scene</h2><ul><li>Fiddler 手机抓包的一些设置</li><li>通过 Fiddler 获取手机应用的网络请求数据</li><li>不通端网络的设置方式</li></ul><a id="more"></a><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="外部网络-Fiddler-宿主机网络"><a href="#外部网络-Fiddler-宿主机网络" class="headerlink" title="外部网络 / Fiddler 宿主机网络"></a>外部网络 / Fiddler 宿主机网络</h3><ul><li>手机和 Fiddler 宿主机连接在同一个外部网络中</li><li>Fiddler 宿主机连接外部网络,然后宿主机开放热点, 手机连接该热点</li></ul><ol><li>然后在手机的 WLAN 连接里配置宿主机上 Fiddler 的代理地址和端口<ul><li><img src="/images/fiddlerAboutPhoneProxy/Screenshot_2021-12-20-22-31-01-945_com.android.se.jpg" alt></li></ul></li><li>连上后,手机浏览器打开该 代理地址和端口 下载证书</li><li>最后打开手机应用,即可在 Fiddler 里看到网络数据了 </li></ol><h3 id="手机共享网络"><a href="#手机共享网络" class="headerlink" title="手机共享网络"></a>手机共享网络</h3><ul><li>手机通过开启热点,把移动网络分享出来,然后宿主机连接该网络</li></ul><ol><li>打开手机移动网络设置,找到 APN , 设置代理地址和端口为宿主机上 Fiddler 的代理地址和端口<ul><li><img src="/images/fiddlerAboutPhoneProxy/Screenshot_2021-12-20-22-36-09-186_com.android.ph.jpg" alt></li><li><img src="/images/fiddlerAboutPhoneProxy/Screenshot_2021-12-20-22-36-22-323_com.android.se.jpg" alt></li><li><img src="/images/fiddlerAboutPhoneProxy/Screenshot_2021-12-20-22-36-43-946_com.android.se.jpg" alt></li></ul></li><li>最后打开手机应用,同样的可以在 Fiddler 里看到网络请求包了</li></ol><h2 id="Other"><a href="#Other" class="headerlink" title="Other"></a>Other</h2><ul><li>Fiddler 抓包的常规配置开启</li><li><img src="/images/fiddlerAboutPhoneProxy/Snipaste_2021-12-20_22-05-08.png" alt></li><li><img src="/images/fiddlerAboutPhoneProxy/Snipaste_2021-12-20_22-07-17.png" alt></li><li>下图右上角查看该代理地址信息</li><li><img src="/images/fiddlerAboutPhoneProxy/Snipaste_2021-12-20_22-07-49.png" alt></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Scene&quot;&gt;&lt;a href=&quot;#Scene&quot; class=&quot;headerlink&quot; title=&quot;Scene&quot;&gt;&lt;/a&gt;Scene&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Fiddler 手机抓包的一些设置&lt;/li&gt;
&lt;li&gt;通过 Fiddler 获取手机应用的网络请求数据&lt;/li&gt;
&lt;li&gt;不通端网络的设置方式&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
    
      <category term="Fiddler" scheme="http://www.orekiyuta.cn/tags/Fiddler/"/>
    
      <category term="Proxy" scheme="http://www.orekiyuta.cn/tags/Proxy/"/>
    
  </entry>
  
  <entry>
    <title>RoboCopy In Win10 Task About(0x1/0x10)</title>
    <link href="http://www.orekiyuta.cn/archives/roboCopyInWin10TaskAbout/"/>
    <id>http://www.orekiyuta.cn/archives/roboCopyInWin10TaskAbout/</id>
    <published>2021-12-18T10:58:13.000Z</published>
    <updated>2021-12-18T11:06:00.772Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Scene"><a href="#Scene" class="headerlink" title="Scene"></a>Scene</h2><ul><li>RoboCopy bat 脚本添加到 win10 定时任务中</li><li>出现 上次运行结果为 0x1,0x10</li></ul><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><ul><li>因为脚本中使用到 网络磁盘 的原因</li><li>手动执行脚本没问题,但是添加到定时任务就不行</li><li>原因是在 定时任务 中的网络磁盘账户信息和 本地执行的网络磁盘账户 并不是一致的</li><li>解决方法:<ol><li>在定时任务的 常规-安全选项-选择【只在用户登录时运行】,这样就使用了和本地执行一致的网络磁盘账户信息</li><li>在脚本中添加 网络磁盘账户信息 <code>net use j: \\RemoteHost\Files RemotePassword /user:RemoteUser</code><a id="more"></a></li></ol></li></ul><h2 id="Other"><a href="#Other" class="headerlink" title="Other"></a>Other</h2><ul><li>👉 <a href="https://yo.zgserver.com/robocopy0x10.html" target="_blank" rel="noopener">计划的Robocopy任务失败，出现0x10错误</a></li><li>👉 <a href="https://blog.csdn.net/u010033674/article/details/115034957" target="_blank" rel="noopener">批处理脚本手动双击可以执行，但计划任务中执行失败</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Scene&quot;&gt;&lt;a href=&quot;#Scene&quot; class=&quot;headerlink&quot; title=&quot;Scene&quot;&gt;&lt;/a&gt;Scene&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;RoboCopy bat 脚本添加到 win10 定时任务中&lt;/li&gt;
&lt;li&gt;出现 上次运行结果为 0x1,0x10&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Solution&quot;&gt;&lt;a href=&quot;#Solution&quot; class=&quot;headerlink&quot; title=&quot;Solution&quot;&gt;&lt;/a&gt;Solution&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;因为脚本中使用到 网络磁盘 的原因&lt;/li&gt;
&lt;li&gt;手动执行脚本没问题,但是添加到定时任务就不行&lt;/li&gt;
&lt;li&gt;原因是在 定时任务 中的网络磁盘账户信息和 本地执行的网络磁盘账户 并不是一致的&lt;/li&gt;
&lt;li&gt;解决方法:&lt;ol&gt;
&lt;li&gt;在定时任务的 常规-安全选项-选择【只在用户登录时运行】,这样就使用了和本地执行一致的网络磁盘账户信息&lt;/li&gt;
&lt;li&gt;在脚本中添加 网络磁盘账户信息 &lt;code&gt;net use j: \\RemoteHost\Files RemotePassword /user:RemoteUser&lt;/code&gt;
    
    </summary>
    
    
    
      <category term="Windows" scheme="http://www.orekiyuta.cn/tags/Windows/"/>
    
      <category term="RoboCopy" scheme="http://www.orekiyuta.cn/tags/RoboCopy/"/>
    
  </entry>
  
  <entry>
    <title>Use ArchiveBox For Daily</title>
    <link href="http://www.orekiyuta.cn/archives/useArchiveBoxForDaily/"/>
    <id>http://www.orekiyuta.cn/archives/useArchiveBoxForDaily/</id>
    <published>2021-12-11T19:20:46.000Z</published>
    <updated>2021-12-12T09:42:46.290Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Sence"><a href="#Sence" class="headerlink" title="Sence"></a>Sence</h2><ul><li>由于经常发现一些站点或文章很不错,每次都只是手动保存链接</li><li>偶尔回头看的话,原本保存的链接的站点或文章已经消失了</li><li>所以需要一个服务在保存站点链接的时候,把站点抓取保存成文件</li><li>这样日后翻看就很方便<a id="more"></a></li></ul><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><ul><li>ArchiveBox 可以很好的满足这个日常的需求 👉 <a href="https://archivebox.io/" target="_blank" rel="noopener">ArchiveBox</a></li></ul><h3 id="Easy-Setup-With-Docker"><a href="#Easy-Setup-With-Docker" class="headerlink" title="Easy Setup With Docker"></a>Easy Setup With Docker</h3><ul><li>切换到非 root 账户下安装</li><li><code>mkdir ~/archivebox &amp;&amp; cd ~/archivebox</code> ## 创建目录</li><li><code>docker run -v $PWD:/data -it archivebox/archivebox init --setup</code> # 初始化</li><li><code>docker run -v $PWD:/data -p 8000:8000 archivebox/archivebox</code> # 启动容器<br><img src="/images/useArchiveBoxForDaily/Snipaste_2021-12-12_03-21-47.png" alt></li></ul><h3 id="Account-About"><a href="#Account-About" class="headerlink" title="Account About"></a>Account About</h3><ul><li>登录后台需要修改下默认密码</li><li><code>docker exec -it [容器id] /bin/bash</code> 进入容器</li><li>ArchiveBox 修改用户信息需要在非 root 账户下</li><li>进入容器后默认的是 root 用户,需要创建新用户<ul><li><code>useradd -d /home/elias elias</code></li><li><code>passwd elias</code></li></ul></li><li><code>su elias</code> 接着切换用户执行操作</li><li><code>archivebox manage changepassword USERNAME</code> 修改账户密码</li><li><code>archivebox manage changepassword admin</code> 修改默认的 admin 密码<br><img src="/images/useArchiveBoxForDaily/Snipaste_2021-12-12_03-21-24.png" alt></li></ul><h2 id="Other"><a href="#Other" class="headerlink" title="Other"></a>Other</h2><ul><li><p>容器里需要给目录赋权限</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ archivebox manage changepassword USERNAME</span><br><span class="line">[i] [2021-12-11 19:17:32] ArchiveBox v0.6.2: archivebox manage changepassword USERNAME</span><br><span class="line">    &gt; /data</span><br><span class="line"></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;/usr/local/lib/python3.9/logging/config.py&quot;, line 564, in configure</span><br><span class="line">    handler = self.configure_handler(handlers[name])</span><br><span class="line">  File &quot;/usr/local/lib/python3.9/logging/config.py&quot;, line 745, in configure_handler</span><br><span class="line">    result = factory(**kwargs)</span><br><span class="line">  File &quot;/usr/local/lib/python3.9/logging/handlers.py&quot;, line 153, in __init__</span><br><span class="line">    BaseRotatingHandler.__init__(self, filename, mode, encoding=encoding,</span><br><span class="line">  File &quot;/usr/local/lib/python3.9/logging/handlers.py&quot;, line 58, in __init__</span><br><span class="line">    logging.FileHandler.__init__(self, filename, mode=mode,</span><br><span class="line">  File &quot;/usr/local/lib/python3.9/logging/__init__.py&quot;, line 1146, in __init__</span><br><span class="line">    StreamHandler.__init__(self, self._open())</span><br><span class="line">  File &quot;/usr/local/lib/python3.9/logging/__init__.py&quot;, line 1175, in _open</span><br><span class="line">    return open(self.baseFilename, self.mode, encoding=self.encoding,</span><br><span class="line">PermissionError: [Errno 13] Permission denied: &apos;/data/logs/errors.log&apos;</span><br></pre></td></tr></table></figure></div></li><li><p>切换到 root 账户, 到 <code>/data</code> 目录下 </p></li><li><code>chmod -R 777 ./</code> 给 data 目录下所有文件赋予权限</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Sence&quot;&gt;&lt;a href=&quot;#Sence&quot; class=&quot;headerlink&quot; title=&quot;Sence&quot;&gt;&lt;/a&gt;Sence&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;由于经常发现一些站点或文章很不错,每次都只是手动保存链接&lt;/li&gt;
&lt;li&gt;偶尔回头看的话,原本保存的链接的站点或文章已经消失了&lt;/li&gt;
&lt;li&gt;所以需要一个服务在保存站点链接的时候,把站点抓取保存成文件&lt;/li&gt;
&lt;li&gt;这样日后翻看就很方便
    
    </summary>
    
    
    
      <category term="Docker" scheme="http://www.orekiyuta.cn/tags/Docker/"/>
    
      <category term="ArchiveBox" scheme="http://www.orekiyuta.cn/tags/ArchiveBox/"/>
    
  </entry>
  
  <entry>
    <title>CentOS8 About Docker</title>
    <link href="http://www.orekiyuta.cn/archives/centos8AboutDocker/"/>
    <id>http://www.orekiyuta.cn/archives/centos8AboutDocker/</id>
    <published>2021-12-11T19:03:25.000Z</published>
    <updated>2021-12-11T19:38:39.922Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Sence"><a href="#Sence" class="headerlink" title="Sence"></a>Sence</h2><ul><li>安装 ArchiveBox 遇到了一些问题</li><li>由于是用 Docker 安装的, 容器启动失败<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SHELL"><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Emulate Docker CLI using podman. Create /etc/containers/nodocker to quiet msg.</span><br><span class="line">ERRO[0001] unable to get systemd connection to add healthchecks: dial unix /tmp/podman-run-1003/systemd/private: connect: connection refused</span><br><span class="line">ERRO[0001] unable to get systemd connection to start healthchecks: dial unix /tmp/podman-run-1003/systemd/private: connect: connection refused</span><br><span class="line">4</span><br></pre></td></tr></table></figure></div></li></ul><a id="more"></a><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><ul><li>查了一下发现在 CentOS8 里直接使用 <code>yum install docker -y</code> ,安装的是 podman-docker</li><li>虽说命令兼,但是有些问题,所以把它卸了重新装 Docker</li><li><code>yum remove docker</code> 卸载当前装的 podman</li><li><code>curl https://download.docker.com/linux/centos/docker-ce.repo -o /etc/yum.repos.d/docker-ce.repo</code> 下载 docker-ce 源</li><li><code>yum install docker-ce -y</code> 安装 docker-ce</li></ul><h2 id="Other"><a href="#Other" class="headerlink" title="Other"></a>Other</h2><h3 id="docker-Cannot-connect-to-the-Docker-daemon-at-unix-var-run-docker-sock-Is-the-docker-daemon-running"><a href="#docker-Cannot-connect-to-the-Docker-daemon-at-unix-var-run-docker-sock-Is-the-docker-daemon-running" class="headerlink" title="docker: Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?."></a>docker: Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?.</h3><ul><li>添加用户到 docker 组</li><li><code>gpasswd -a $USER docker</code> root用户下添加当前登录用户(root)到 docker 组</li><li><code>gpasswd -a elias docker</code> root用户下添加 elias 用户到 docker 组</li><li><code>systemctl restart docker</code> 重启 docker </li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Sence&quot;&gt;&lt;a href=&quot;#Sence&quot; class=&quot;headerlink&quot; title=&quot;Sence&quot;&gt;&lt;/a&gt;Sence&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;安装 ArchiveBox 遇到了一些问题&lt;/li&gt;
&lt;li&gt;由于是用 Docker 安装的, 容器启动失败&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Emulate Docker CLI using podman. Create /etc/containers/nodocker to quiet msg.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ERRO[0001] unable to get systemd connection to add healthchecks: dial unix /tmp/podman-run-1003/systemd/private: connect: connection refused&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ERRO[0001] unable to get systemd connection to start healthchecks: dial unix /tmp/podman-run-1003/systemd/private: connect: connection refused&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
    
      <category term="Docker" scheme="http://www.orekiyuta.cn/tags/Docker/"/>
    
      <category term="CentOS" scheme="http://www.orekiyuta.cn/tags/CentOS/"/>
    
      <category term="Podman" scheme="http://www.orekiyuta.cn/tags/Podman/"/>
    
  </entry>
  
  <entry>
    <title>Apache Log4j2 Fixbug</title>
    <link href="http://www.orekiyuta.cn/archives/log4j2Fixbug/"/>
    <id>http://www.orekiyuta.cn/archives/log4j2Fixbug/</id>
    <published>2021-12-11T14:25:22.000Z</published>
    <updated>2021-12-11T14:41:21.633Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Sence"><a href="#Sence" class="headerlink" title="Sence"></a>Sence</h2><ul><li>Apache Log4j 2.x &lt; 2.15.0 存在远程代码执行</li><li>结合了 JNDI , 本地利用 Log4j2 构造函数, 调用远程服务端 Log4j2 的函数,导致本地函数可以注入远程服务端代码</li><li>详细 👉<a href="https://help.aliyun.com/noticelist/articleid/1060971232.html" target="_blank" rel="noopener">【漏洞预警】Apache Log4j2 远程代码执行漏洞（CVE-2021-44228）</a><a id="more"></a></li></ul><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><ul><li>到 maven 官方仓库下载最新修复该漏洞的 jar 👉 <a href="https://repo.maven.apache.org/maven2/org/apache/logging/log4j/" target="_blank" rel="noopener">org/apache/logging/log4j</a> </li><li>在官方站点可查看哪些 jar 引用了 涉及该漏洞版本的log4j2 jar , 如 👉 <a href="https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core/2.14.1/usages" target="_blank" rel="noopener">mvnrepository/Artifacts using log4j-core version 2.14.1</a> </li><li>在项目里替换一下 已修复漏洞的 jar 的引用即可</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Sence&quot;&gt;&lt;a href=&quot;#Sence&quot; class=&quot;headerlink&quot; title=&quot;Sence&quot;&gt;&lt;/a&gt;Sence&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Apache Log4j 2.x &amp;lt; 2.15.0 存在远程代码执行&lt;/li&gt;
&lt;li&gt;结合了 JNDI , 本地利用 Log4j2 构造函数, 调用远程服务端 Log4j2 的函数,导致本地函数可以注入远程服务端代码&lt;/li&gt;
&lt;li&gt;详细 👉&lt;a href=&quot;https://help.aliyun.com/noticelist/articleid/1060971232.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;【漏洞预警】Apache Log4j2 远程代码执行漏洞（CVE-2021-44228）&lt;/a&gt;
    
    </summary>
    
    
    
      <category term="Java" scheme="http://www.orekiyuta.cn/tags/Java/"/>
    
      <category term="SRC" scheme="http://www.orekiyuta.cn/tags/SRC/"/>
    
  </entry>
  
  <entry>
    <title>Raw Github Connection Refused</title>
    <link href="http://www.orekiyuta.cn/archives/rawGithubConnectionRefused/"/>
    <id>http://www.orekiyuta.cn/archives/rawGithubConnectionRefused/</id>
    <published>2021-12-11T09:38:53.000Z</published>
    <updated>2021-12-11T15:05:22.487Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Sence"><a href="#Sence" class="headerlink" title="Sence"></a>Sence</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SHELL"><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">root@raspberrypi /h/pi# curl -sSL 'https://get.archivebox.io' | sh</span><br><span class="line">curl: (7) Failed to connect to raw.githubusercontent.com port 443: Connection refused</span><br><span class="line">root@raspberrypi /h/pi# ping raw.githubusercontent.com</span><br><span class="line">PING raw.githubusercontent.com (127.0.0.1) 56(84) bytes of data.</span><br><span class="line">64 bytes from localhost (127.0.0.1): icmp_seq=1 ttl=64 time=0.180 ms</span><br><span class="line">64 bytes from localhost (127.0.0.1): icmp_seq=2 ttl=64 time=0.156 ms</span><br><span class="line">64 bytes from localhost (127.0.0.1): icmp_seq=3 ttl=64 time=0.114 ms</span><br><span class="line">64 bytes from localhost (127.0.0.1): icmp_seq=4 ttl=64 time=0.118 ms</span><br><span class="line">64 bytes from localhost (127.0.0.1): icmp_seq=5 ttl=64 time=0.102 ms</span><br><span class="line">64 bytes from localhost (127.0.0.1): icmp_seq=6 ttl=64 time=0.105 ms</span><br><span class="line">64 bytes from localhost (127.0.0.1): icmp_seq=7 ttl=64 time=0.128 ms</span><br><span class="line">^C</span><br><span class="line">--- raw.githubusercontent.com ping statistics ---</span><br><span class="line">7 packets transmitted, 7 received, 0% packet loss, time 234ms</span><br><span class="line">rtt min/avg/max/mdev = 0.102/0.129/0.180/0.026 ms</span><br><span class="line">root@raspberrypi /h/pi#</span><br></pre></td></tr></table></figure></div><ul><li>由上可知,由于 DNS 污染问题, raw.githubusercontent.com 经常访问不了</li></ul><a id="more"></a><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><ul><li>打开 <a href="https://www.ipaddress.com/" target="_blank" rel="noopener">ipaddress</a> , 输入 <code>raw.githubusercontent.com</code> 查看目前 DNS 解析到的 IP</li><li>如 <a href="https://ipaddress.com/website/raw.githubusercontent.com" target="_blank" rel="noopener">ipaddress</a> ,翻看可见解析到的 IP</li><li>最后在机器上配置 hosts 解析即可, 刷 DNS 缓存<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SHELL"><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">185.199.108.133 raw.githubusercontent.com</span><br><span class="line">185.199.109.133 raw.githubusercontent.com</span><br><span class="line">185.199.110.133 raw.githubusercontent.com</span><br><span class="line">185.199.111.133 raw.githubusercontent.com</span><br></pre></td></tr></table></figure></div></li></ul><h2 id="Other"><a href="#Other" class="headerlink" title="Other"></a>Other</h2><ul><li><p>on pi 重启网络</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">pi@raspberrypi ~&gt; /etc/init.d/networking restart</span><br><span class="line">[....] Restarting networking (via systemctl): networking.service==== AUTHENTICATING FOR org.freedesktop.systemd1.manage-units ===</span><br><span class="line">Authentication is required to restart &apos;networking.service&apos;.</span><br><span class="line">Authenticating as: ,,, (pi)</span><br><span class="line">Password:</span><br><span class="line">==== AUTHENTICATION COMPLETE ===</span><br><span class="line">. ok</span><br></pre></td></tr></table></figure></div></li><li><p>使用工具刷新 DNS</p><ul><li><code>sudo apt-get install nscd</code></li><li><code>sudo /etc/init.d/nscd restart</code></li></ul></li><li>改变机器 DNS 解析服务器 <code>sudo nano /etc/resolv.conf</code><ul><li><code>nameserver 8.8.8.8</code> 修改</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Sence&quot;&gt;&lt;a href=&quot;#Sence&quot; class=&quot;headerlink&quot; title=&quot;Sence&quot;&gt;&lt;/a&gt;Sence&lt;/h2&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;root@raspberrypi /h/pi# curl -sSL &#39;https://get.archivebox.io&#39; | sh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;curl: (7) Failed to connect to raw.githubusercontent.com port 443: Connection refused&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;root@raspberrypi /h/pi# ping raw.githubusercontent.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PING raw.githubusercontent.com (127.0.0.1) 56(84) bytes of data.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64 bytes from localhost (127.0.0.1): icmp_seq=1 ttl=64 time=0.180 ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64 bytes from localhost (127.0.0.1): icmp_seq=2 ttl=64 time=0.156 ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64 bytes from localhost (127.0.0.1): icmp_seq=3 ttl=64 time=0.114 ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64 bytes from localhost (127.0.0.1): icmp_seq=4 ttl=64 time=0.118 ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64 bytes from localhost (127.0.0.1): icmp_seq=5 ttl=64 time=0.102 ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64 bytes from localhost (127.0.0.1): icmp_seq=6 ttl=64 time=0.105 ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64 bytes from localhost (127.0.0.1): icmp_seq=7 ttl=64 time=0.128 ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;^C&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--- raw.githubusercontent.com ping statistics ---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7 packets transmitted, 7 received, 0% packet loss, time 234ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rtt min/avg/max/mdev = 0.102/0.129/0.180/0.026 ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;root@raspberrypi /h/pi#&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;由上可知,由于 DNS 污染问题, raw.githubusercontent.com 经常访问不了&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
    
      <category term="Github" scheme="http://www.orekiyuta.cn/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>Git Reset Commit Without Change Code</title>
    <link href="http://www.orekiyuta.cn/archives/gitResetCommitWithoutChangeCode/"/>
    <id>http://www.orekiyuta.cn/archives/gitResetCommitWithoutChangeCode/</id>
    <published>2021-12-10T18:56:21.000Z</published>
    <updated>2021-12-10T19:07:05.953Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Scene"><a href="#Scene" class="headerlink" title="Scene"></a>Scene</h2><ul><li>因为设置了定时提交 github 脚本,偶尔在目录下打包了大的压缩包忘了删除</li><li>定时任务提交 git commit 到本地仓库了</li><li>今天手动 push 到 github 发现文件过大<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SHELL"><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">F:\Code\Temp&gt;git push</span><br><span class="line">    Enumerating objects: 1193, done.</span><br><span class="line">    Counting objects: 100% (1193/1193), done.</span><br><span class="line">    Delta compression using up to 12 threads</span><br><span class="line">    Compressing objects: 100% (812/812), done.</span><br><span class="line">    Writing objects: 100% (1177/1177), 146.10 MiB | 461.00 KiB/s, done.</span><br><span class="line">    Total 1177 (delta 212), reused 1111 (delta 175), pack-reused 0</span><br><span class="line">    remote: Resolving deltas: 100% (212/212), completed with 14 local objects.</span><br><span class="line">    remote: error: Trace: 64c7aa0d8f24426987252f0fa81b8013929e07d5a0f4f52abfff441e541eee51</span><br><span class="line">    remote: error: See http://git.io/iEPt8g for more information.</span><br><span class="line">    remote: error: File vue/vue.zip is 161.24 MB; this exceeds GitHub's file size limit of 100.00 MB </span><br><span class="line">    remote: error: GH001: Large files detected. You may want to try Git Large File Storage - https://git-lfs.github.com.</span><br><span class="line">    To github.com:OrekiYuta/Temp.git</span><br><span class="line">    ! [remote rejected]   master -&gt; master (pre-receive hook declined)</span><br><span class="line">    error: failed to push some refs to 'github.com:OrekiYuta/Temp.git'</span><br></pre></td></tr></table></figure></div></li></ul><a id="more"></a><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><ul><li>解决方法是 回退本地 commit 到大文件提交记录之前的 commit</li><li><p>以下方法只是 回退本地 commit 记录,并不会对本地代码修改回退</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SHELL"><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">F:\Code\Temp&gt;git log</span><br><span class="line">commit 137833d814c302e03e806aa0dd297c66cbfe26f8 (HEAD -&gt; master)</span><br><span class="line">Author: OrekiYuta &lt;orekiyuta@gmail.com&gt;</span><br><span class="line">Date:   Sat Dec 11 02:49:13 2021 +0800</span><br><span class="line"></span><br><span class="line">    on</span><br><span class="line"></span><br><span class="line">commit 05d5ba83c4d0ee2678ab7ad0fe71f36456b3d548</span><br><span class="line">Author: OrekiYuta &lt;orekiyuta@gmail.com&gt;</span><br><span class="line">Date:   Sat Dec 11 02:30:57 2021 +0800</span><br><span class="line"></span><br><span class="line">    2021-12-11/ 2:30:54.50 by auto commit</span><br><span class="line"></span><br><span class="line">commit 4d09030accde17e9f9b1551fbbea06511683d635</span><br><span class="line">Author: OrekiYuta &lt;orekiyuta@gmail.com&gt;</span><br><span class="line">Date:   Fri Dec 10 23:30:55 2021 +0800</span><br><span class="line"></span><br><span class="line">    2021-12-10/23:30:54.05 by auto commit</span><br><span class="line"></span><br><span class="line">commit f0089c3aa837e7fb7a820717f1e5f529f352890e</span><br><span class="line">Author: OrekiYuta &lt;orekiyuta@gmail.com&gt;</span><br><span class="line">Date:   Fri Dec 10 02:32:18 2021 +0800</span><br><span class="line"></span><br><span class="line">    2021-12-10/ 2:31:49.91 by auto commit</span><br><span class="line"></span><br><span class="line">commit f4fe5830c92e3a0240c6606f6b35bea74b951f35 # commit id 标识</span><br><span class="line">Author: OrekiYuta &lt;orekiyuta@gmail.com&gt;</span><br><span class="line">Date:   Thu Dec 9 23:31:11 2021 +0800</span><br><span class="line"></span><br><span class="line">    2021-12-09/23:31:01.07 by auto commit</span><br></pre></td></tr></table></figure></div></li><li><p>定位到想要回退 commit 的记录 id 标识</p></li><li><p><code>git reset id</code> 执行即可</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SHELL"><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">F:\Code\Temp\vue&gt;git reset a389eb06aa841e79c734f361a25b77b4c177e964</span><br><span class="line">Unstaged changes after reset:</span><br><span class="line">M       python/amos/.idea/amos.iml</span><br><span class="line">M       python/amos/.idea/misc.xml</span><br><span class="line">M       python/amos/.idea/modules.xml</span><br><span class="line">M       python/amos/.idea/vcs.xml</span><br><span class="line">M       python/lab/app/service/github_commit_service.py</span><br><span class="line">D       python/lab/test.md</span><br><span class="line">D       vue/kasrc/.editorconfig</span><br></pre></td></tr></table></figure></div></li><li><p>最后重新提交 push 代码到 github 即可</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Scene&quot;&gt;&lt;a href=&quot;#Scene&quot; class=&quot;headerlink&quot; title=&quot;Scene&quot;&gt;&lt;/a&gt;Scene&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;因为设置了定时提交 github 脚本,偶尔在目录下打包了大的压缩包忘了删除&lt;/li&gt;
&lt;li&gt;定时任务提交 git commit 到本地仓库了&lt;/li&gt;
&lt;li&gt;今天手动 push 到 github 发现文件过大&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;F:\Code\Temp&amp;gt;git push&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Enumerating objects: 1193, done.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Counting objects: 100% (1193/1193), done.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Delta compression using up to 12 threads&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Compressing objects: 100% (812/812), done.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Writing objects: 100% (1177/1177), 146.10 MiB | 461.00 KiB/s, done.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Total 1177 (delta 212), reused 1111 (delta 175), pack-reused 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    remote: Resolving deltas: 100% (212/212), completed with 14 local objects.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    remote: error: Trace: 64c7aa0d8f24426987252f0fa81b8013929e07d5a0f4f52abfff441e541eee51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    remote: error: See http://git.io/iEPt8g for more information.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    remote: error: File vue/vue.zip is 161.24 MB; this exceeds GitHub&#39;s file size limit of 100.00 MB &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    remote: error: GH001: Large files detected. You may want to try Git Large File Storage - https://git-lfs.github.com.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    To github.com:OrekiYuta/Temp.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ! [remote rejected]   master -&amp;gt; master (pre-receive hook declined)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    error: failed to push some refs to &#39;github.com:OrekiYuta/Temp.git&#39;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
    
      <category term="Git" scheme="http://www.orekiyuta.cn/tags/Git/"/>
    
      <category term="Github" scheme="http://www.orekiyuta.cn/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>Yarn Connetion Retrying</title>
    <link href="http://www.orekiyuta.cn/archives/yarnConnetionRetrying/"/>
    <id>http://www.orekiyuta.cn/archives/yarnConnetionRetrying/</id>
    <published>2021-12-09T17:06:16.000Z</published>
    <updated>2021-12-11T15:08:30.206Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Scene"><a href="#Scene" class="headerlink" title="Scene"></a>Scene</h2><ul><li>创建 quasar 项目的时候,安装依赖的时候网络总是重连<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yarn install v1.22.10</span><br><span class="line">info No lockfile found.</span><br><span class="line">[1/5] Validating package.json...</span><br><span class="line">[2/5] Resolving packages...</span><br><span class="line">info There appears to be trouble with your network connection. Retrying...</span><br></pre></td></tr></table></figure></div></li></ul><a id="more"></a><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><ul><li>改下 yarn 下载源就行</li></ul><ol><li><p><code>yarn config list</code> 查看代理</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SHELL"><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">info yarn config</span><br><span class="line">&#123;</span><br><span class="line">'version-tag-prefix': 'v',</span><br><span class="line">'version-git-tag': true,</span><br><span class="line">'version-commit-hooks': true,</span><br><span class="line">'version-git-sign': false,</span><br><span class="line">'version-git-message': 'v%s',</span><br><span class="line">'init-version': '1.0.0',</span><br><span class="line">'init-license': 'MIT',</span><br><span class="line">'save-prefix': '^',</span><br><span class="line">'bin-links': true,</span><br><span class="line">'ignore-scripts': false,</span><br><span class="line">'ignore-optional': false,</span><br><span class="line">registry: 'https://registry.yarnpkg.com', # 默认</span><br><span class="line">'strict-ssl': true,</span><br><span class="line">'user-agent': 'yarn/1.22.10 npm/? node/v12.22.3 win32 ia32',</span><br><span class="line">lastUpdateCheck: 1639062753417</span><br><span class="line">&#125;</span><br><span class="line">info npm config</span><br><span class="line">&#123;&#125;</span><br></pre></td></tr></table></figure></div></li><li><p>删除代理</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SHELL"><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yarn config delete proxy # 执行这个就行</span><br><span class="line">npm config rm proxy   # 根据 config 结果, 如果 npm 设置了也删除就行</span><br><span class="line">npm config rm https-proxy # 同上</span><br></pre></td></tr></table></figure></div></li><li><p><code>yarn config set registry https://registry.npm.taobao.org</code> 更换下载源</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SHELL"><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">info yarn config</span><br><span class="line">&#123;</span><br><span class="line">'version-tag-prefix': 'v',</span><br><span class="line">'version-git-tag': true,</span><br><span class="line">'version-commit-hooks': true,</span><br><span class="line">'version-git-sign': false,</span><br><span class="line">'version-git-message': 'v%s',</span><br><span class="line">'init-version': '1.0.0',</span><br><span class="line">'init-license': 'MIT',</span><br><span class="line">'save-prefix': '^',</span><br><span class="line">'bin-links': true,</span><br><span class="line">'ignore-scripts': false,</span><br><span class="line">'ignore-optional': false,</span><br><span class="line">registry: 'https://registry.npm.taobao.org', # 更换成淘宝镜像</span><br><span class="line">'strict-ssl': true,</span><br><span class="line">'user-agent': 'yarn/1.22.10 npm/? node/v12.22.3 win32 ia32',</span><br><span class="line">lastUpdateCheck: 1639062753417</span><br><span class="line">&#125;</span><br><span class="line">info npm config</span><br><span class="line">&#123;&#125;</span><br><span class="line">Done i</span><br></pre></td></tr></table></figure></div></li></ol><h2 id="Other"><a href="#Other" class="headerlink" title="Other"></a>Other</h2><ul><li>Carry On !!!<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SHELL"><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> quasar create coza</span></span><br><span class="line"></span><br><span class="line">___</span><br><span class="line">/ _ \ _   _  __ _ ___  __ _ _ __</span><br><span class="line">| | | | | | |/ _` / __|/ _` | '__|</span><br><span class="line">| |_| | |_| | (_| \__ \ (_| | |</span><br><span class="line">\__\_\\__,_|\__,_|___/\__,_|_|</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">? Target directory exists. Continue? Yes</span><br><span class="line">? Project name (internal usage for dev) coza</span><br><span class="line">? Project product name (must start with letter if building mobile apps) coza</span><br><span class="line">? Project description lazy sleep</span><br><span class="line">? Author OrekiYuta &lt;orekiyuta@gmail.com&gt;</span><br><span class="line">? Pick your CSS preprocessor: SCSS</span><br><span class="line">? Check the features needed for your project: ESLint (recommended), TypeScript, Vuex, Axios, Vue-i18n</span><br><span class="line">? Pick a component style: Composition</span><br><span class="line">? Pick an ESLint preset: Prettier</span><br><span class="line">? Continue to install project dependencies after the project has been created? (recommended) yarn</span><br><span class="line"></span><br><span class="line">Quasar CLI · Generated "coza".</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[*] Installing project dependencies ...</span><br><span class="line"></span><br><span class="line">yarn install v1.22.10</span><br><span class="line">info No lockfile found.</span><br><span class="line">[1/5] Validating package.json...</span><br><span class="line">[2/5] Resolving packages...</span><br><span class="line">warning @quasar/app &gt; webpack-dev-server &gt; url &gt; querystring@0.2.0: The querystring API is considered Legacy. new code should use the URLSearchParams API instead.</span><br><span class="line">[3/5] Fetching packages...</span><br><span class="line">info fsevents@2.3.2: The platform "win32" is incompatible with this module.</span><br><span class="line">info "fsevents@2.3.2" is an optional dependency and failed compatibility check. Excluding it from installation.</span><br><span class="line">[4/5] Linking dependencies...</span><br><span class="line">warning " &gt; vue-i18n@9.1.9" has unmet peer dependency "vue@^3.0.0".</span><br><span class="line">warning " &gt; vuex@4.0.2" has unmet peer dependency "vue@^3.0.2".</span><br><span class="line">warning " &gt; @babel/eslint-parser@7.16.3" has unmet peer dependency "@babel/core@&gt;=7.11.0".</span><br><span class="line">warning "@typescript-eslint/eslint-plugin &gt; tsutils@3.21.0" has unmet peer dependency "typescript@&gt;=2.8.0 || &gt;= 3.2.0-dev || &gt;= 3.3.0-dev || &gt;= 3.4.0-dev || &gt;= 3.5.0-dev || &gt;= 3.6.0-dev || &gt;=</span><br><span class="line">3.6.0-beta || &gt;= 3.7.0-dev || &gt;= 3.7.0-beta".</span><br><span class="line">[5/5] Building fresh packages...</span><br><span class="line">success Saved lockfile.</span><br><span class="line">Done in 64.59s.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[*] Running eslint --fix to comply with chosen preset rules...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">yarn run v1.22.10</span><br><span class="line"><span class="meta">$</span><span class="bash"> eslint --ext .js,.ts,.vue ./ --fix</span></span><br><span class="line">Done in 49.61s.</span><br><span class="line"></span><br><span class="line">[*] Quasar Project initialization finished!</span><br><span class="line"></span><br><span class="line">To get started:</span><br><span class="line"></span><br><span class="line">cd coza</span><br><span class="line">quasar dev</span><br><span class="line"></span><br><span class="line">Documentation can be found at: https://quasar.dev</span><br><span class="line"></span><br><span class="line">Quasar is relying on donations to evolve. We'd be very grateful if you can</span><br><span class="line">read our manifest on "Why donations are important": https://quasar.dev/why-donate</span><br><span class="line">Donation campaign: https://donate.quasar.dev</span><br><span class="line">Any amount is very welcomed.</span><br><span class="line">If invoices are required, please first contact razvan@quasar.dev</span><br><span class="line"></span><br><span class="line">Please give us a star on Github if you appreciate our work:</span><br><span class="line">https://github.com/quasarframework/quasar</span><br><span class="line"></span><br><span class="line">Enjoy! - Quasar Team</span><br></pre></td></tr></table></figure></div></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Scene&quot;&gt;&lt;a href=&quot;#Scene&quot; class=&quot;headerlink&quot; title=&quot;Scene&quot;&gt;&lt;/a&gt;Scene&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;创建 quasar 项目的时候,安装依赖的时候网络总是重连&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;yarn install v1.22.10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;info No lockfile found.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[1/5] Validating package.json...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[2/5] Resolving packages...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;info There appears to be trouble with your network connection. Retrying...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
    
      <category term="Quasar" scheme="http://www.orekiyuta.cn/tags/Quasar/"/>
    
      <category term="vue.js" scheme="http://www.orekiyuta.cn/tags/vue-js/"/>
    
      <category term="Yarn" scheme="http://www.orekiyuta.cn/tags/Yarn/"/>
    
  </entry>
  
  <entry>
    <title>SecurityGroup On TencentCVM</title>
    <link href="http://www.orekiyuta.cn/archives/securityGroupOnTencentCVM/"/>
    <id>http://www.orekiyuta.cn/archives/securityGroupOnTencentCVM/</id>
    <published>2021-12-04T09:44:09.000Z</published>
    <updated>2021-12-04T10:08:14.940Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Scene"><a href="#Scene" class="headerlink" title="Scene"></a>Scene</h2><ul><li>在云服务器上部署了服务，开放端口配置注意点<a id="more"></a></li></ul><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><ul><li>以下为 腾讯云CVM 为例说明</li></ul><ol><li>先找到自己的机器,并找到安全组选项,并新建一个随意的安全组<ul><li><img src="/images/securityGroupOnTencentCVM/Snipaste_2021-12-04_17-51-56.png" alt></li></ul></li><li>新建完后,点击修改规则<ul><li><img src="/images/securityGroupOnTencentCVM/Snipaste_2021-12-04_17-53-32.png" alt></li></ul></li><li>让外部访问,设置入站规则即可<ul><li><img src="/images/securityGroupOnTencentCVM/Snipaste_2021-12-04_17-56-04.png" alt></li><li><img src="/images/securityGroupOnTencentCVM/Snipaste_2021-12-04_17-56-52.png" alt></li></ul></li><li>最后设置一下,关联实例，把需要开放以上规则的机器配置上<br> Snipaste_2021-12-04_17-57-56.png</li></ol><ul><li>以下为机器内的服务的启动配置说明</li></ul><ol><li><p>正常操作了以上的步骤,端口即是正常开放了,</p><ul><li>telnet 能否连通,还需要机器内的端口监听正确</li></ul></li><li><p>比如以下情况,在外部是 telnet 不通的</p><ul><li><img src="/images/securityGroupOnTencentCVM/Snipaste_2021-12-04_18-03-22.png" alt></li><li>因为服务监听的是机器内本地(127.0.0.1)的端口，没法响应外部(0.0.0.0)请求</li><li>上图的服务,限制了只有来源IP为127.0.0.1才可以访问，其他IP无法访问，因此是无法telnet成功</li></ul></li><li><p>正确的方式是把服务启动修改为0.0.0.0，允许所有IP即可</p></li><li>或者保持以上的本地监听(127.0.0.1),再配置 Nginx,通过Nginx代理监听</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Scene&quot;&gt;&lt;a href=&quot;#Scene&quot; class=&quot;headerlink&quot; title=&quot;Scene&quot;&gt;&lt;/a&gt;Scene&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;在云服务器上部署了服务，开放端口配置注意点
    
    </summary>
    
    
    
      <category term="CloudServer" scheme="http://www.orekiyuta.cn/tags/CloudServer/"/>
    
  </entry>
  
  <entry>
    <title>USBWebserver For Dev</title>
    <link href="http://www.orekiyuta.cn/archives/USBWebserverForDev/"/>
    <id>http://www.orekiyuta.cn/archives/USBWebserverForDev/</id>
    <published>2021-12-04T09:22:55.000Z</published>
    <updated>2021-12-09T17:07:40.625Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Scene"><a href="#Scene" class="headerlink" title="Scene"></a>Scene</h2><ul><li>在一台机器上搭建 MySQL 并开放外部使用 </li><li>常规方式有 （1）直接部署 MySQL （2） 在 Docker 中部署 MySQL</li><li>以上两种方式有其一定的优势:（1）性能好 （2）容器隔离</li><li>但是以上两种方式都需要部署成本, 为了寻求更便捷的部署和迁移, 将使用以下方式<a id="more"></a></li></ul><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><ul><li><p>利用 可以移植的 USBWebserver =&gt; <a href="https://usbwebserver.yura.mk.ua/" target="_blank" rel="noopener">USBWebserver8</a></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Most light weight local portable web server with Apache, PHP, MySQL and PHPMyAdmin for Windows on the Web. Just unzip enywhere (including USB flash drive), run and start using.</span><br></pre></td></tr></table></figure></div></li><li><p>部署环境在 win10,解压启动即可</p></li><li>设置开机启动，win + r ,<code>shell:startup</code>,把启动文件放在该目录即可</li><li>到此，只能是本地访问，提供给外部访问还需要进去 MySQL 赋予用户权限 <ul><li><img src="/images/USBWebserverForDev/Snipaste_2021-12-04_17-32-09.png" alt></li><li><img src="/images/USBWebserverForDev/Snipaste_2021-12-04_17-32-44.png" alt></li><li><img src="/images/USBWebserverForDev/Snipaste_2021-12-04_17-33-12.png" alt></li></ul></li><li>最后防火墙开放端口即可</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Scene&quot;&gt;&lt;a href=&quot;#Scene&quot; class=&quot;headerlink&quot; title=&quot;Scene&quot;&gt;&lt;/a&gt;Scene&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;在一台机器上搭建 MySQL 并开放外部使用 &lt;/li&gt;
&lt;li&gt;常规方式有 （1）直接部署 MySQL （2） 在 Docker 中部署 MySQL&lt;/li&gt;
&lt;li&gt;以上两种方式有其一定的优势:（1）性能好 （2）容器隔离&lt;/li&gt;
&lt;li&gt;但是以上两种方式都需要部署成本, 为了寻求更便捷的部署和迁移, 将使用以下方式
    
    </summary>
    
    
    
      <category term="MySQL" scheme="http://www.orekiyuta.cn/tags/MySQL/"/>
    
  </entry>
  
</feed>
